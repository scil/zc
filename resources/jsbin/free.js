"use strict";var free={e:"\u771F".charCodeAt(0),_encodeCharCode:function _encodeCharCode(code){var n=code-free.e;if(n%2==0){n=n*2}else{n=n*3}n=n.toString();if(n.length>6)console.error("free._encodeCharCode for : "+n);n=["","0","00","000","0000","00000"][6-n.length]+n;return n},_decodeCharCode:function _decodeCharCode(charCode){var code=parseInt(charCode.substr(charCode.lastIndexOf("0-")+1),10);if(code%2==0){code=code/2}else{code=code/3}return String.fromCharCode(code+free.e)},encodeText:function encodeText(text){var c=[];for(var i=0;i<text.length;i++){c.push(free._encodeCharCode(text.charCodeAt(i)))}var code=c.join("");if(text==free.decodeTextCode(code)){return code}else{alert("wrong free.encodeText for "+text)}},decodeTextCode:function decodeTextCode(code){var text=[],lastCharIndex=code.length-6;for(var i=0;i<=lastCharIndex;i=i+6){text.push(free._decodeCharCode(code.substr(i,6)))}return text.join("")},_placeHolder:function _placeHolder(text){var placeholder="",i=text.length;while(i--){placeholder+=text.charCodeAt(i)>255?"__":"_"}return placeholder},_decodeDomTree:function _decodeDomTree(ele,codes){var freeTags=ele.getElementsByTagName(free.tag);if(!freeTags){return}if(typeof codes=="string")codes=codes.split("+");var freeEle,indexNotDependent=-1,code;for(var i=0,len=freeTags.length;i<len;i++){freeEle=freeTags[i];if(freeEle.hasAttribute("data-c")){freeEle.textContent=free.decodeTextCode(ele.getAttribute("data-c"));freeEle.removeAttribute("data-c")}else{indexNotDependent++;if(freeEle.hasAttribute("data-i")){code=codes[parseInt(freeEle.getAttribute("data-i"))];freeEle.removeAttribute("data-i")}else{code=codes[indexNotDependent]}}freeEle.textContent=free.decodeTextCode(code)}},decodeDomTrees:function decodeDomTrees($eles){$eles.each(function(){var codes=null;if(this.lastElementChild.hasAttribute("data-c"))codes=this.lastElementChild.getAttribute("data-c");free._decodeDomTree(this,codes)})},encodeTagedStringIndependently:function encodeTagedStringIndependently(rawStr){var encoded=rawStr.replace(/<z-free(.*?)>(.+?)<\/z-free>/g,function(match,attris,text){return"<z-free data-c=\""+free.encodeText(text)+"\""+attris+">"+free._placeHolder(text)+"</z-free>"});var restored=free.decodeTagedStringIndependently(encoded);if(restored==rawStr){return encoded}else{console.error("free.encodeTagedStringIndependently ");console.log("origin: ",rawStr);console.log("restored: ",restored);console.log("recoded : ",encoded)}},decodeTagedStringIndependently:function decodeTagedStringIndependently(codedStr){return codedStr.replace(/<z-free data-c="(\S+)"(.*?)>.+?<\/z-free>/g,function(match,code,attris){return"<z-free"+attris+">"+free.decodeTextCode(code)+"</z-free>"})},encodeTagedString:function encodeTagedString(rawStr){var all_codes=[],currentCode,currentCodeIndex=0,tagIndex=-1;var encoded=rawStr.replace(/<z-free(?: (en|es|ru)="([^"]+?)")?(.*?)>(.+?)<\/z-free>/g,function(match,lang,alt,attris,text){tagIndex++;currentCode=free.encodeText(text);currentCodeIndex=all_codes.indexOf(currentCode);if(currentCodeIndex==-1){all_codes.push(currentCode);currentCodeIndex=all_codes.length-1}var placeHolderText=alt||free._placeHolder(text);var langAttri="";if(alt&&lang){langAttri=" lang=\""+lang+"\""}if(currentCodeIndex!=tagIndex){return"<z-free"+langAttri+" data-i=\""+currentCodeIndex+"\""+attris+">"+placeHolderText+"</z-free>"}return"<z-free"+langAttri+attris+">"+placeHolderText+"</z-free>"});var codes=all_codes.join("+");var restored=this.decodeTagedString(encoded,codes);if(restored==rawStr){return{s:encoded,codes:codes}}else{console.error("free.encodeTagedString");console.log("origin: ",rawStr);console.log("restored: ",restored);console.log("recoded : ",encoded)}},decodeTagedString:function decodeTagedString(codedStr,codes){codes=codes.split("+");var tagIndex=-1;return codedStr.replace(/<z-free(?: lang="(en|es)")?(?: data-i="(\w+?)")?(.*?)>(.+?)<\/z-free>/g,function(match,lang,codeIndex,attris,alt){codeIndex=codeIndex||++tagIndex;if(lang){return"<z-free "+lang+"=\""+alt+"\""+attris+">"+free.decodeTextCode(codes[codeIndex])+"</z-free>"}else{return"<z-free"+attris+">"+free.decodeTextCode(codes[codeIndex])+"</z-free>"}})},hasZcCode:function hasZcCode(s){return s&&s.indexOf("<"+free.tag)>-1}};free.tag=free.decodeTextCode("-91119-60900-91179-91143-60788-60788");module.exports=free;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,